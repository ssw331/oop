#pragma once

/*
* ――――我是开头――――
* C : 面向过程，自顶向下，一个main + 多个子函数
* C++ : 面向对象，实现软件设计的产业化
* 
* 抽象：
*		抽象出共有性质
*		――数据抽象：对应成员变量
*       ――行为抽象：对应成员函数
* 封装：
*		将抽象出的数据和行为打包成一个类，且类仅开放接口（interface）而不公开内容
*		保证可移植性和安全性
* 继承与派生：
*		保持原有类特性的基础（继承）上，进行更具体的说明（派生）
* 
* 一般将成员变量（数据）隐蔽起来，保留成员函数作为interface来对成员变量进行操作
* 类内成员函数的声明时必须的，但是定义不必须，可以在类内定义也可以在类外定义
* 
* 类一般在全局作用域定义
* 
* 类的声明相当于在定义一种数据类型，因此没有实例化的类不会被分配任何存储空间
* 
* private:只有类成员可以访问（继承和派生也不能访问）
* protected:可以被派生类访问
* public:谁都可以访问
* 
* 成员函数和成员变量不存储在同一区域
* 
* 可以前向声明一个类
* 
* 类内不可以有其本身的数据类型，但可以存在其指针
*/

